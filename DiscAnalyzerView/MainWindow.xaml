<RibbonWindow x:Class="DiscAnalyzerView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiscAnalyzerView"
        xmlns:tree="clr-namespace:Aga.Controls.Tree;assembly=Aga.Controls"
        xmlns:converters="clr-namespace:DiscAnalyzerView.HelperClasses.Converters"
        xmlns:helpers="clr-namespace:DiscAnalyzerView.HelperClasses"
        xmlns:enums="clr-namespace:DiscAnalyzerView.Enums"
        xmlns:viewModelEnums="clr-namespace:DiscAnalyzerViewModel.Enums;assembly=DiscAnalyzerViewModel"
        xmlns:modelEnums="clr-namespace:DiscAnalyzerModel.Enums;assembly=DiscAnalyzerModel"
        mc:Ignorable="d"
        Loaded="MainWindow_OnLoaded"
        Icon="Icon.ico" Title="Disc Analyzer"
        Height="550" SizeToContent="Width"
        ResizeMode="CanResizeWithGrip">
    <RibbonWindow.Resources>
        <DataTemplate x:Key="HeaderTemplateArrowUp">
          <DockPanel>
              <TextBlock Text="{Binding}"/>
              <Path x:Name="arrow" Fill="Black" Data="M 5,11 L 15,11 L 10,6 L 5,11"/>
          </DockPanel>
      </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel>
                <TextBlock Text="{Binding}"/>
                <Path x:Name="arrow" Fill="Black" Data="M 5,6 L 10,11 L 15,6 L 5,6"/>
            </DockPanel>
        </DataTemplate>
    </RibbonWindow.Resources>
    <Grid Margin="-4, 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="22" />
        </Grid.RowDefinitions>
        <Ribbon Grid.Row="0">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu KeyTip="F" x:Name="RibbonApplicationMenu">
                    <RibbonApplicationMenu.SmallImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing>
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0,0,20,20"></RectangleGeometry>
                                    </GeometryDrawing.Geometry>
                                    <GeometryDrawing.Brush>
                                        <VisualBrush  Stretch="Uniform">
                                            <VisualBrush.Visual>
                                                <TextBlock Text="File" FontSize="16" Foreground="White"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </GeometryDrawing.Brush>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </RibbonApplicationMenu.SmallImageSource>
                    <RibbonApplicationMenuItem Header="Select Directory" ImageSource="\Images/MenuIcons/open-64.png"
                                               Command="{Binding Path=OpenDialogCommand}" KeyTip="D" />
                    <RibbonApplicationMenuItem Header="Refresh" ImageSource="\Images/MenuIcons/refresh-64.png"
                                               Command="{Binding Path=RefreshCommand}" KeyTip="R"/>
                    <RibbonApplicationMenuItem Header="Stop Scan" ImageSource="\Images/MenuIcons/stop-64.png"
                                               Command="{Binding Path=StopCommand}" KeyTip="S"/>
                    <RibbonApplicationMenu.FooterPaneContent>
                        <RibbonApplicationMenuItem Header="Exit" ImageSource="\Images/MenuIcons/exit-64.png"
                                               Command="{Binding Path=ExitCommand}"/>
                    </RibbonApplicationMenu.FooterPaneContent>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="Home" KeyTip="H">
                <RibbonGroup Header="Scan">
                    <RibbonSplitButton x:Name="SelectDirectoryButton" Label="Select Directory"
                                        Command="{Binding Path=OpenDialogCommand}"
                                        LargeImageSource="/Images/MenuIcons/open-64.png"
                                        SmallImageSource="/Images/MenuIcons/open-32.png">
                        <RibbonSplitButton.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" Padding="3">
                                            <TextBlock.Background>
                                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                    <GradientStop Color="#FFECF0F6" Offset="0"/>
                                                    <GradientStop Color="#FFDEE4EA" Offset="1"/>
                                                </LinearGradientBrush>
                                            </TextBlock.Background>
                                        </TextBlock>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </RibbonSplitButton.GroupStyle>
                        <RibbonSplitButton.ItemContainerStyle>
                            <Style TargetType="RibbonMenuItem">
                                <Setter Property="ImageSource" Value="{Binding Category,
                                    Converter={x:Static converters:CategoryToImageConverter.Instance}}" />
                                <Setter Property="Header" Value="{Binding Name}" />
                                <Setter Property="Margin" Value="-6,0,0,0" />
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="Command" Value="{Binding Command}"/>
                                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                            </Style>
                        </RibbonSplitButton.ItemContainerStyle>
                    </RibbonSplitButton>
                    <RibbonButton Label="Stop Scan"
                                  LargeImageSource="/Images/MenuIcons/stop-64.png"
                                  SmallImageSource="/Images/MenuIcons/stop-32.png"
                                  Command="{Binding Path=StopCommand}"
                                  IsEnabled="{Binding Path=AnalysisInProgress}" />
                    <RibbonButton Label="Refresh"
                                  LargeImageSource="/Images/MenuIcons/refresh-64.png"
                                  SmallImageSource="/Images/MenuIcons/refresh-32.png"
                                  Command="{Binding Path=RefreshCommand}"
                                  IsEnabled="{Binding Path=CanRefresh}"/>
                </RibbonGroup>
                <RibbonGroup Header="Mode">
                    <RibbonGroup.Resources>
                        <Style TargetType="RibbonRadioButton">
                            <Setter Property="IsEnabled" Value="{Binding Path=AnalysisInProgress,
                        Converter={x:Static converters:InverseBooleanConverter.Instance}}"></Setter>
                        </Style>
                    </RibbonGroup.Resources>
                    <RibbonRadioButton Label="Size"
                                       LargeImageSource="/Images/MenuIcons/size-64.png"
                                       SmallImageSource="/Images/MenuIcons/size-32.png"
                                       IsChecked="{Binding Path=Mode,
                        Converter={x:Static converters:ModeConverter.Instance},
                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.Size}}"/>
                    <RibbonRadioButton Label="Allocated Space"
                                  LargeImageSource="/Images/MenuIcons/space-64.png"
                                  SmallImageSource="/Images/MenuIcons/space-32.png"
                                  IsChecked="{Binding Path=Mode,
                        Converter={x:Static converters:ModeConverter.Instance},
                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.Allocated}}"/>
                    <RibbonRadioButton Label="File Count"
                                  LargeImageSource="/Images/MenuIcons/count-64.png"
                                  SmallImageSource="/Images/MenuIcons/count-32.png"
                                  IsChecked="{Binding Path=Mode,
                        Converter={x:Static converters:ModeConverter.Instance},
                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.Files}}"/>
                    <RibbonRadioButton Label="Percent"
                                  LargeImageSource="/Images/MenuIcons/percent-64.png"
                                  SmallImageSource="/Images/MenuIcons/percent-32.png"
                                  IsChecked="{Binding Path=Mode,
                        Converter={x:Static converters:ModeConverter.Instance},
                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.PercentOfParent}}"/>
                </RibbonGroup>
                <RibbonGroup Header="Unit">
                    <RibbonRadioButton Label="Automatic Units"
                                  LargeImageSource="/Images/MenuIcons/auto-64.png"
                                  SmallImageSource="/Images/MenuIcons/auto-32.png"
                                  IsChecked="{Binding Path=SizeUnit,
                        Converter={x:Static converters:UnitConverter.Instance},
                        ConverterParameter={x:Static viewModelEnums:Unit.Auto}}"/>
                    <RibbonRadioButton SmallImageSource="/Images/MenuIcons/gb-32.png"
                                       IsChecked="{Binding Path=SizeUnit,
                        Converter={x:Static converters:UnitConverter.Instance},
                        ConverterParameter={x:Static viewModelEnums:Unit.Gb}}"/>
                    <RibbonRadioButton SmallImageSource="/Images/MenuIcons/mb-32.png"
                                       IsChecked="{Binding Path=SizeUnit,
                        Converter={x:Static converters:UnitConverter.Instance},
                        ConverterParameter={x:Static viewModelEnums:Unit.Mb}}"/>
                    <RibbonRadioButton SmallImageSource="/Images/MenuIcons/kb-32.png"
                                       IsChecked="{Binding Path=SizeUnit,
                        Converter={x:Static converters:UnitConverter.Instance},
                        ConverterParameter={x:Static viewModelEnums:Unit.Kb}}"/>
                </RibbonGroup>
                <RibbonGroup Header="Expand">
                    <RibbonMenuButton Label="Expand"
                                  LargeImageSource="/Images/MenuIcons/expand-64.png"
                                  SmallImageSource="/Images/MenuIcons/expand-32.png">
                        <RibbonMenuItem Header="To Level 1" Tag="{x:Static enums:ExpandLevel.Level1}"
                                        Click="ExpandMenuItem_OnClick"/>
                        <RibbonMenuItem Header="To Level 2" Tag="{x:Static enums:ExpandLevel.Level2}"
                                        Click="ExpandMenuItem_OnClick"/>
                        <RibbonMenuItem Header="To Level 3" Tag="{x:Static enums:ExpandLevel.Level3}"
                                        Click="ExpandMenuItem_OnClick"/>
                        <RibbonMenuItem Header="To Level 4" Tag="{x:Static enums:ExpandLevel.Level4}"
                                        Click="ExpandMenuItem_OnClick"/>
                        <RibbonMenuItem Header="To Level 5" Tag="{x:Static enums:ExpandLevel.Level5}"
                                        Click="ExpandMenuItem_OnClick"/>
                        <RibbonSeparator />
                        <RibbonMenuItem Header="Full Expand" ImageSource="/Images/MenuIcons/expand-32.png"
                                        Tag="{x:Static enums:ExpandLevel.FullExpand}"
                                        Click="ExpandMenuItem_OnClick"/>
                    </RibbonMenuButton>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <Grid Grid.Row="1" >
            <tree:TreeList Name="Tree" GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
                <tree:TreeList.Resources>
                    <Style x:Key="LeftColAlign">
                        <Setter Property="GridViewColumnHeader.HorizontalContentAlignment" Value="Left" />
                    </Style>
                    <Style x:Key="RightColAlign">
                        <Setter Property="GridViewColumnHeader.HorizontalContentAlignment" Value="Right" />
                    </Style>
                    <Style x:Key="CenterColAlign">
                        <Setter Property="GridViewColumnHeader.HorizontalContentAlignment" Value="Center" />
                    </Style>
                    <Style x:Key="LargeElementInBold" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLargeItem}" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </tree:TreeList.Resources>
                <tree:TreeList.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </tree:TreeList.ItemContainerStyle>
                <tree:TreeList.View>
                    <GridView>
                        <GridViewColumn x:Name="NameColumn" Width="300" HeaderContainerStyle="{StaticResource LeftColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.Name}" Content="Name"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <tree:RowExpander />
                                        <Image Width="20" Source="{Binding Type,
                                            Converter={x:Static converters:HeaderToImageConverter.Instance}}">
                                        </Image>
                                        <TextBlock Style="{StaticResource LargeElementInBold}" Padding="10, 0" VerticalAlignment="Center"
                                                       Visibility="{Binding Path=DataContext.Mode,
                                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}},
                                                        Converter={x:Static converters:ModeToVisibilityConverter.Instance},
                                                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.Size}}" >
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{x:Static converters:ItemSizeConverter.Instance}">
                                                    <Binding Path="Size"/>
                                                    <Binding Path="DataContext.SizeUnit"
                                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}}" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource LargeElementInBold}" Padding="10, 0" VerticalAlignment="Center"
                                                       Visibility="{Binding Path=DataContext.Mode,
                                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}},
                                                        Converter={x:Static converters:ModeToVisibilityConverter.Instance},
                                                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.Allocated}}">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{x:Static converters:ItemSizeConverter.Instance}">
                                                    <Binding Path="Allocated"/>
                                                    <Binding Path="DataContext.SizeUnit"
                                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}}" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource LargeElementInBold}" Padding="10, 0" VerticalAlignment="Center"
                                                       Text="{Binding Files, StringFormat={}{0:N0} Files}"
                                                       Visibility="{Binding Path=DataContext.Mode,
                                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}},
                                                        Converter={x:Static converters:ModeToVisibilityConverter.Instance},
                                                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.Files}}"/>
                                        <TextBlock Style="{StaticResource LargeElementInBold}" Padding="10, 0" VerticalAlignment="Center"
                                                       Text="{Binding PercentOfParent, Converter={x:Static converters:IntToPercentConverter.Instance}}"
                                                       Visibility="{Binding Path=DataContext.Mode,
                                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}},
                                                        Converter={x:Static converters:ModeToVisibilityConverter.Instance},
                                                        ConverterParameter={x:Static modelEnums:ItemBaseProperty.PercentOfParent}}"/>
                                        <TextBlock Style="{StaticResource LargeElementInBold}" Text="{Binding Name}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="85" HeaderContainerStyle="{StaticResource RightColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.Size}" Content="Size"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource LargeElementInBold}" HorizontalAlignment="Right">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{x:Static converters:ItemSizeConverter.Instance}">
                                                <Binding Path="Size"/>
                                                <Binding Path="DataContext.SizeUnit"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn x:Name="AllocatedColumn"  Width="85" HeaderContainerStyle="{StaticResource RightColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.Allocated}" Content="Allocated"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource LargeElementInBold}" HorizontalAlignment="Right">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{x:Static converters:ItemSizeConverter.Instance}">
                                                <Binding Path="Allocated"/>
                                                <Binding Path="DataContext.SizeUnit"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type RibbonWindow}}" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="70" HeaderContainerStyle="{StaticResource RightColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.Files}" Content="Files"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource LargeElementInBold}" HorizontalAlignment="Right"
                                                   Text="{Binding Files, StringFormat={}{0:N0}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="70" HeaderContainerStyle="{StaticResource RightColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.Folders}" Content="Folders"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource LargeElementInBold}" HorizontalAlignment="Right"
                                                   Text="{Binding Folders, StringFormat={}{0:N0}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="150" HeaderContainerStyle="{StaticResource CenterColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.PercentOfParent}"
                                                      Content="{Binding Path=PercentOfParentColumnName}" />
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Stretch">
                                        <StackPanel.Background>
                                            <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                <GradientStop Color="#FFC0AADF" Offset="0"/>
                                                <GradientStop x:Name="GradientStop" Color="#FF5F5DC5" Offset="{Binding PercentOfParent,
                                                        Converter={x:Static converters:PercentToOffsetConverter.Instance} }"/>
                                                <GradientStop Color="Gainsboro" Offset="{Binding ElementName=GradientStop, Path=Offset}"/>
                                                <GradientStop Color="Gainsboro" Offset="1"/>
                                            </LinearGradientBrush>
                                        </StackPanel.Background>
                                        <TextBlock  Style="{StaticResource LargeElementInBold}" HorizontalAlignment="Center"
                                                        Text="{Binding PercentOfParent,
                                            Converter={x:Static converters:IntToPercentConverter.Instance}}">
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Width="120" HeaderContainerStyle="{StaticResource LeftColAlign}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Tag="{x:Static helpers:TreeListViewColumn.LastModified}" Content="Last Modified"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource LargeElementInBold}"  HorizontalAlignment="Left"
                                                   Text="{Binding LastModified,
                                                Converter={x:Static converters:DateTimeToDateConverter.Instance}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </tree:TreeList.View>
            </tree:TreeList>
            <TextBlock x:Name="InitialText" Margin="10, 30" FontSize="15"
                           Visibility="{Binding ElementName=Tree, Path=HasItems,
                    Converter={x:Static converters:BoolToTextVisibilityConverter.Instance}}">
                    To analyze your disc space usage, choose a drive or path from the "Scan" menu
            </TextBlock>
        </Grid>
        <StatusBar Grid.Row="2" Background="WhiteSmoke">
            <StatusBarItem Width="200" Content="{Binding DiscFreeSpaceInfo}" />
            <Separator />
            <StatusBarItem Width="120" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <StackPanel Orientation="Horizontal">
                    <ProgressBar Width="120" Minimum="0" Maximum="100" IsIndeterminate="{Binding AnalysisInProgress}"
                                 Visibility="{Binding AnalysisInProgress,
                        Converter={x:Static converters:BoolToProgressBarVisibilityConverter.Instance}}"/>
                    <TextBlock Text="{Binding FilesCountInfo}"></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <Separator />
            <StatusBarItem Content="{Binding ClusterSizeInfo}" />
        </StatusBar>
    </Grid>
</RibbonWindow>